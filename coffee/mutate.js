// Generated by CoffeeScript 1.7.1
var Random, heritableTraits, mutate, mutationRate, rng, strainCount;

if (typeof modules !== "undefined" && modules !== null) {
  Random = (require('random')).Random;
}

rng = new Random();

mutationRate = 0.2;

strainCount = 1;

heritableTraits = {};

heritableTraits.strain = "strain-1";

heritableTraits.stepSize = {};

heritableTraits.stepSize.baseValue = 5;

heritableTraits.stepSize.currentValue = 5;

heritableTraits.stepSize.randMean = -0.8;

heritableTraits.stepSize.minValue = 1;

heritableTraits.stepSize.maxValue = 100;

heritableTraits.stepSize.cleanFunction = Math.round;

mutate = function(heritableTraits, random) {
  var didMutate, mod, probMutate, trait, traitName;
  didMutate = false;
  for (traitName in heritableTraits) {
    if (/strain/.test(traitName)) {
      continue;
    }
    console.log("Looking at " + traitName);
    probMutate = random.random();
    if (probMutate <= mutationRate) {
      trait = heritableTraits[traitName];
      console.log("Mutation: " + probMutate);
      mod = random.gauss(trait.randMean);
      console.log("Modifier: " + mod);
      trait.currentValue += mod;
      trait.currentValue = trait.cleanFunction(trait.currentValue);
      if (trait.currentValue < trait.minValue) {
        trait.currentValue = trait.minValue;
      }
      if (trait.currentValue > trait.maxValue) {
        trait.currentValue = trait.maxValue;
      }
      didMutate = true;
    }
  }
  if (didMutate) {
    heritableTraits.strain = "strain-" + (++strainCount);
  }
  return heritableTraits;
};

//# sourceMappingURL=mutate.map
